# A Docker Compose application with Moqui, Postgres, OpenSearch, OpenSearch Dashboards, and virtual hosting through
# Traefik and Let's Encrypt supporting multiple moqui instances on different hostnames.

# Run with something like this for detached mode:
# $ docker compose -f moqui-postgres-compose.le.yml -p moqui up -d
# Or to copy runtime directories for mounted volumes, set default settings, etc use something like this:
# $ ./compose-run.sh moqui-postgres-compose.le.yml
# This sets the project/app name to 'moqui' and the network will be 'moqui_default', to be used by external moqui containers

# Test locally by adding the virtual host to /etc/hosts or with something like:
# $ curl -H "Host: moqui.local" localhost/Login

# To run an additional instance of moqui run something like this (but with
# many more arguments for volume mapping, db setup, etc):
# $ docker run -e VIRTUAL_HOST=moqui2.local --name moqui2_local --network moqui_default moqui

# To import data from the docker host using port 5432 mapped for 127.0.0.1 only use something like this:
# $ psql -h 127.0.0.1 -p 5432 -U moqui -W moqui < pg-dump.sql

# TODO: moqui.local and example.com

version: "3.3"
services:
  traefik:
    image: traefik:v2.10
    container_name: traefik-proxy
    command:
      - --log.level=DEBUG
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
      - --api
      #      - --certificatesresolvers.leresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.leresolver.acme.email=demo@example.com
      - --certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.leresolver.acme.tlschallenge=true
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      # Dashboard
      - traefik.http.routers.traefik.rule=Host(`dashboard.example.com`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls.certresolver=leresolver
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.middlewares=authtraefik
      - traefik.http.middlewares.authtraefik.basicauth.users=user:$$apr1$$q8eZFHjF$$Fvmkk//V6Btlaf2i/ju5n/ # user / password

      # global redirect to https
      - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https

      # middleware redirect
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https

  moqui-server:
    image: moqui
    container_name: moqui-server
    command: conf=conf/MoquiProductionConf.xml
    restart: always
    links:
     - moqui-database
     - moqui-search
    volumes:
     - ./runtime/conf:/opt/moqui/runtime/conf
     - ./runtime/lib:/opt/moqui/runtime/lib
     - ./runtime/classes:/opt/moqui/runtime/classes
     - ./runtime/ecomponent:/opt/moqui/runtime/ecomponent
     - ./runtime/log:/opt/moqui/runtime/log
     - ./runtime/txlog:/opt/moqui/runtime/txlog
     - ./runtime/sessions:/opt/moqui/runtime/sessions
     # this one isn't needed when not using H2/etc: - ./runtime/db:/opt/moqui/runtime/db
    environment:
     - "JAVA_TOOL_OPTIONS=-Xms1024m -Xmx1024m"
     - instance_purpose=production
     - entity_ds_db_conf=postgres
     - entity_ds_host=moqui-database
     - entity_ds_port=5432
     - entity_ds_database=moqui
     - entity_ds_schema=public
     - entity_ds_user=moqui
     - entity_ds_password=moqui
     - entity_ds_crypt_pass='DEFAULT_CHANGE_ME!!!'
     # configuration for ElasticFacade.ElasticClient, make sure the old moqui-elasticsearch component is NOT included in the Moqui build
     - elasticsearch_url=https://moqui-search:9200
     # prefix for index names, use something distinct and not 'moqui_' or 'mantle_' which match the beginning of OOTB index names
     - elasticsearch_index_prefix=default_
     - elasticsearch_user=admin
     - elasticsearch_password=admin
     # CHANGE ME - note that VIRTUAL_HOST is for nginx-proxy so it picks up this container as one it should reverse proxy
     # this can be a comma separate list of hosts like 'example.com,www.example.com'
     - VIRTUAL_HOST=moqui.local
     # moqui will accept traffic from other hosts but these are the values used for URL writing when specified:
     # - webapp_http_host=moqui.local
     - webapp_http_port=80
     - webapp_https_port=443
     - webapp_https_enabled=true
     # nginx-proxy populates X-Real-IP with remote_addr by default, better option for outer proxy than X-Forwarded-For which defaults to proxy_add_x_forwarded_for
     - webapp_client_ip_header=X-Real-IP
     - default_locale=en_US
     - default_time_zone=US/Pacific
    labels:
#     - --port=8080
#     - traefik.http.services.moqui.loadbalancer.server.port=8080
     - traefik.http.routers.moqui.rule=Host(`moqui.example.com`)
     - traefik.http.routers.moqui.entrypoints=websecure
     - traefik.http.routers.moqui.tls=true
     - traefik.http.routers.moqui.tls.certresolver=leresolver

  moqui-database:
    image: postgres:14.5
    container_name: moqui-database
    restart: always
    ports:
     # change this as needed to bind to any address or even comment to not expose port outside containers
     - 127.0.0.1:5432:5432
    volumes:
     # edit these as needed to map configuration and data storage
     - ./db/postgres/data:/var/lib/postgresql/data
    environment:
     - POSTGRES_DB=moqui
     - POSTGRES_DB_SCHEMA=public
     - POSTGRES_USER=moqui
     - POSTGRES_PASSWORD=moqui
     # PGDATA, POSTGRES_INITDB_ARGS

  moqui-search:
    image: opensearchproject/opensearch:2.4.0
    container_name: moqui-search
    restart: always
    ports:
      # change this as needed to bind to any address or even comment to not expose port outside containers
      - 127.0.0.1:9200:9200
      - 127.0.0.1:9300:9300
    volumes:
      # edit these as needed to map configuration and data storage
      - ./opensearch/data:/usr/share/opensearch/data
      # - ./opensearch/config/opensearch.yml:/usr/share/opensearch/config/opensearch.yml
      # - ./opensearch/logs:/usr/share/opensearch/logs
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - network.host=_site_
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.4.0
    container_name: opensearch-dashboards
    links:
     - moqui-search
    ports:
      - 5601:5601
    expose:
      - 127.0.0.1:5601:5601
    environment:
      OPENSEARCH_HOSTS: '["https://moqui-search:9200"]'
